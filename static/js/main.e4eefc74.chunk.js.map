{"version":3,"sources":["components/Spinner/Spinner.module.css","components/Cards/Card/SummaryCard.js","utils/numberWithCommas.js","components/Cards/Cards.js","utils/totalsForCard.js","components/Cards/util/card-info.js","utils/generateLGDataset.js","components/ButtonGroup/GPDtoggle.js","components/Chart/LineGraph/LineGraph.js","components/Chart/BarGraph/BarGraph.js","components/Chart/Chart.js","utils/sanitizeCountryCode.js","components/CountryPicker/CountryPicker.js","utils/countryToFlag.js","components/Footer/Footer.js","components/Titlebar/Titlebar.js","components/Title/Title.js","components/ErrorBoundary/ErrorBoundary.js","components/Spinner/Spinner.js","containers/GlobalData/utils/graph-config.js","containers/GlobalData/GlobalData.js","api/suspenseApi.js","App.js","utils/orderByCountry.js","mui/theme.js","index.js"],"names":["module","exports","useStyles","makeStyles","card","borderRadius","position","overflow","boxShadow","content","width","height","zIndex","top","left","opacity","transition","box","flexBasis","display","backgroundColor","right","transform","infected","borderBottom","recovered","deceased","SummaryCard","tConfig","type","styles","typography","map","config","i","Typography","key","align","cu_config","value","Card","className","join","CardContent","slice","Divider","light","variant","Box","p","flex","numberWithCommas","n","numStr","toString","output","index","length","theme","root","breakpoints","between","flexWrap","container","margin","up","gridItem","Cards","data","quantity","confirmedGrowth","deathsGrowth","recoveredGrowth","reduce","numbers","dailyReport","array","iWeekTotal","rWeekTotal","dWeekTotal","iMonthTotal","rMonthTotal","dMonthTotal","style","padding","fontWeight","start","end","delay","separator","duration","fontSize","letterSpacing","paddingBottom","textTransform","color","paddingTop","cardInfo","typographyKeys","Object","keys","Grid","spacing","justify","Array","from","_","item","xs","sm","md","generateLGDataset","label","options","dataArray","updatedDate","dailyInfo","x","Date","y","a","b","c","filter","borderColor","fill","lineTension","borderWidth","pointRadius","interpolate","button","fontFamily","GPDtoggle","toggle","tState","ButtonGroup","aria-label","size","Button","onClick","Chart","Legend","prototype","afterFit","this","LineGraph","country","dailyData","classes","heightLarge","down","heightSmall","only","zeroLineDashLG","useMediaQuery","zeroLineDashSM","component","datasets","confirmed","title","text","tooltips","mode","intersect","callbacks","tooltipItem","datasetIndex","yLabel","toFixed","xLabel","toDateString","bodyAlign","titleAlign","titleFontSize","titleMarginBottom","bodyFontSize","xPadding","yPadding","layout","scales","yAxes","ticks","beginAtZero","callback","gridLines","borderDash","zeroLineWidth","zeroLineColor","xAxes","zeroLineBorderDash","autoSkip","maxTicksLimit","minRotation","hover","onHover","event","chartElement","target","cursor","legend","plugins","crosshair","sync","enabled","zoom","deferred","yOffset","responsive","maintainAspectRatio","BarGraph","totalData","deaths","labels","hoverBackgroundColor","hoverBorderColor","DataChart","chartData","sanitizeCountryCode","code","autoComplete","minWidth","option","marginRight","React","memo","countryListData","handleCountryChange","countryList","Global","push","countryCode","isSanitized","sort","Autocomplete","id","autoHighlight","includeInputInList","onChange","e","newValue","countryValue","getOptionLabel","renderOption","isoCode","String","fromCodePoint","toUpperCase","replace","char","charCodeAt","countryToFlag","renderInput","params","inputProps","TextField","marginTop","alignItems","textAlign","palette","primary","main","values","tablet","flexDirection","textBox1","item2","flexGrow","textBox2","glow","anchor","textDecoration","bottom","visibility","Footer","rel","href","spin","animationDuration","icon","faReact","toolbar","github","Titlebar","useTheme","AppBar","Toolbar","paddingRight","secondary","faVirus","faGithub","date","dark","tooltip","pxToRem","maxWidth","Title","name","getFullYear","toLocaleDateString","weekday","year","month","day","Tooltip","placement","arrow","TransitionComponent","Fade","TransitionProps","timeout","faInfoCircle","ErrorBoundary","state","hasError","error","errorInfo","console","log","message","props","children","Component","Spinner","cubeGrid","cube","cube1","cube2","cube3","cube4","cube5","cube6","cube7","cube8","cube9","graphConfig","divider","GlobalData","initialState","resource","reports","read","useState","setData","useCallback","previousData","currentDailyReport","dailyReports","dailyReportsOptions","dailyGrowthOptions","dailyGrowthConfig","dailyReportsConfig","wrapPromise","promise","result","status","suspender","then","r","axios","get","sanitizedReports","sanitizeCountries","current","errorStatus","countries","forEach","App","Container","fallback","createMuiTheme","laptop","lg","xl","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"8GACAA,EAAOC,QAAU,CAAC,UAAY,2BAA2B,SAAW,0BAA0B,KAAO,sBAAsB,mBAAqB,oCAAoC,MAAQ,uBAAuB,MAAQ,uBAAuB,MAAQ,uBAAuB,MAAQ,uBAAuB,MAAQ,uBAAuB,MAAQ,uBAAuB,MAAQ,uBAAuB,MAAQ,uBAAuB,MAAQ,yB,4NCW9aC,EAAYC,YAAW,CAC3BC,KAAM,CACJC,aAAc,GACdC,SAAU,WACVC,SAAU,UACVC,UACE,8IAEF,WAAY,CACVC,QAAS,KACTH,SAAU,WACVI,MAAO,OACPC,OAAQ,OACRC,OAAQ,KACRC,IAAK,EACLC,KAAM,EACNC,QAAS,EACTP,UACE,gJACFQ,WAAY,+CAKd,iBAAkB,CAChBD,QAAS,IAGbE,IAAK,CACHC,UAAW,MACXZ,SAAU,WACV,uBAAwB,CACtB,UAAW,CACTG,QAAS,MACTU,QAAS,QACTb,SAAU,WACVK,OAAQ,MACRD,MAAO,EACPU,gBAAiB,gBACjBP,IAAK,MACLQ,MAAO,EACPC,UAAW,sBAIjBC,SAAU,CACRC,aAAc,wBAEhBC,UAAW,CACTD,aAAc,wBAEhBE,SAAU,CACRF,aAAc,uCAuCHG,EAnCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KACxBC,EAAS5B,IACT6B,EAAaH,EAAQI,KAAI,SAACC,EAAQC,GAAT,OACvB,IAANA,EACE,kBAACC,EAAA,EAAD,eAAYC,IAAKF,EAAGG,MAAM,UAAaJ,EAAOH,QAC5C,kBAAC,IAAYG,EAAOK,YAGtB,kBAACH,EAAA,EAAD,eAAYC,IAAKF,EAAGG,MAAM,UAAaJ,EAAOH,QAC3CG,EAAOM,UAKd,OACE,kBAACC,EAAA,EAAD,CAAMC,UAAW,CAACX,EAAOD,GAAOC,EAAO1B,MAAMsC,KAAK,MAChD,kBAACC,EAAA,EAAD,KAAcZ,EAAWa,MAAM,EAAG,IAClC,kBAACC,EAAA,EAAD,CAASC,OAAK,EAACC,QAAQ,WACvB,kBAACC,EAAA,EAAD,CAAK7B,QAAQ,QACX,kBAAC6B,EAAA,EAAD,CAAKC,EAAG,EAAGC,KAAK,OAAOT,UAAWX,EAAOb,KACtCc,EAAWa,MAAM,EAAG,IAEvB,kBAACI,EAAA,EAAD,CAAKC,EAAG,EAAGC,KAAK,OAAOT,UAAWX,EAAOb,KACtCc,EAAWa,MAAM,EAAG,OC3FlBO,EAAmB,SAACC,GAI/B,IAHA,IAAMC,EAASD,EAAEE,WACbC,EAASF,EAAOT,OAAO,GACvBY,EAAQ,KACHtB,EAAImB,EAAOI,OAAS,EAAGvB,GAAK,EAAGA,GAAK,EAKzCqB,EAHGC,EAGMH,EAAOnB,GAAK,IAAMmB,EAAOT,MAAMV,EAAI,EAAGA,EAAI,GAAKqB,EAF/CF,EAAOnB,GAAK,IAAMqB,EAK7BC,EAAQtB,GAAQ,KAKlB,OAHIsB,IACFD,EAASF,EAAOT,MAAM,EAAGY,GAASD,GAE7BA,GCTHrD,EAAYC,aAAW,SAACuD,GAAD,YAAY,CACvCC,KAAK,eACFD,EAAME,YAAYC,QAAQ,IAAK,KAAO,CACrCC,SAAU,WAGdC,WAAS,GACPC,OAAQ,eADD,cAENN,EAAME,YAAYC,QAAQ,IAAK,KAAO,CACrCnD,MAAO,QAHF,cAKNgD,EAAME,YAAYK,GAAG,MAAQ,CAC5BvD,MAAO,QANF,GASTwD,SAAS,eACNR,EAAME,YAAYC,QAAQ,KAAM,KAAO,CAGtCnD,MAAO,aA+DEyD,EA1DD,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACfvC,EAAS5B,IASToE,EAAkBF,EAAKA,EAAKX,OAAS,GAAGa,gBACxCC,EAAeH,EAAKA,EAAKX,OAAS,GAAGc,aACrCC,EAAkBJ,EAAKA,EAAKX,OAAS,GAAGe,gBAZV,EAqBlBJ,ECpDdK,QACF,SAACC,EAASC,EAAazC,EAAG0C,GAUxB,OATI1C,EAAI0C,EAAMnB,OAAS,IACrBiB,EAAQG,YAAcF,EAAYL,gBAClCI,EAAQI,YAAcH,EAAYH,gBAClCE,EAAQK,YAAcJ,EAAYJ,cAEpCG,EAAQM,aAAeL,EAAYL,gBACnCI,EAAQO,aAAeN,EAAYH,gBACnCE,EAAQQ,aAAeP,EAAYJ,aAE5BG,IAET,CACEM,YAAa,EACbH,WAAY,EACZI,YAAa,EACbH,WAAY,EACZI,YAAa,EACbH,WAAY,IDmCVhD,EErDgB,SAAC,GAAD,IACtBuC,EADsB,EACtBA,gBACAC,EAFsB,EAEtBA,aACAC,EAHsB,EAGtBA,gBACAQ,EAJsB,EAItBA,YACAH,EALsB,EAKtBA,WACAI,EANsB,EAMtBA,YACAH,EAPsB,EAOtBA,WACAI,EARsB,EAQtBA,YACAH,EATsB,EAStBA,WATsB,MAUjB,CACLxD,SAAU,CACR,CACEO,OAAQ,CACNiB,QAAS,KACToC,MAAO,CACLC,QAAS,gBACTC,WAAY,SAGhB9C,MAAO+B,EACPhC,UAAW,CACTgD,MAAO,EACPC,IAAKjB,GAAmB,EACxBkB,MAAO,GACPC,UAAW,IACXC,SAAU,MAGd,CACEnD,MAAO,WACPT,OAAQ,CACN6D,SAAU,GACVR,MAAO,CACLS,cAAe,QACfD,SAAU,OACVE,cAAe,OACfC,cAAe,YACfC,MAAO,gBAIb,CACExD,MAAO,SACPT,OAAQ,CACNqD,MAAO,CACLW,cAAe,YACfH,SAAU,OACVC,cAAe,WAIrB,CACE9D,OAAQ,CACNqD,MAAO,CACLE,WAAY,OACZW,WAAY,SAGhBzD,MAAOY,EAAiB0B,IAAe,GAEzC,CACEtC,MAAO,UACPT,OAAQ,CACNqD,MAAO,CACLW,cAAe,YACfH,SAAU,OACVC,cAAe,WAIrB,CACE9D,OAAQ,CACNqD,MAAO,CACLE,WAAY,OACZW,WAAY,SAGhBzD,MAAOY,EAAiB6B,IAAgB,IAG5CvD,UAAW,CACT,CACEK,OAAQ,CACNiB,QAAS,KACToC,MAAO,CACLC,QAAS,gBACTC,WAAY,SAGhB9C,MAAOiC,EACPlC,UAAW,CACTgD,MAAO,EACPC,IAAKf,GAAmB,EACxBgB,MAAO,GACPC,UAAW,IACXC,SAAU,MAGd,CACEnD,MAAO,YACPT,OAAQ,CACN6D,SAAU,GACVR,MAAO,CACLS,cAAe,QACfD,SAAU,OACVE,cAAe,OACfE,MAAO,YACPD,cAAe,eAIrB,CACEvD,MAAO,SACPT,OAAQ,CACNqD,MAAO,CACLW,cAAe,YACfH,SAAU,OACVC,cAAe,WAIrB,CACE9D,OAAQ,CACNqD,MAAO,CACLE,WAAY,OACZW,WAAY,SAGhBzD,MAAOY,EAAiB2B,IAAe,GAEzC,CACEvC,MAAO,UACPT,OAAQ,CACNqD,MAAO,CACLW,cAAe,YACfH,SAAU,OACVC,cAAe,WAIrB,CACE9D,OAAQ,CACNqD,MAAO,CACLE,WAAY,OACZW,WAAY,SAGhBzD,MAAOY,EAAiB8B,IAAgB,IAG5CvD,SAAU,CACR,CACEI,OAAQ,CACNiB,QAAS,KACToC,MAAO,CACLC,QAAS,gBACTC,WAAY,SAGhB9C,MAAOgC,EACPjC,UAAW,CACTgD,MAAO,EACPC,IAAKhB,GAAgB,EACrBiB,MAAO,GACPC,UAAW,IACXC,SAAU,OAGd,CACEnD,MAAO,WACPT,OAAQ,CACNiE,MAAO,gBACPJ,SAAU,GACVR,MAAO,CACLS,cAAe,QACfD,SAAU,OACVE,cAAe,OACfC,cAAe,YACfC,MAAO,aAIb,CACExD,MAAO,SACPT,OAAQ,CACNqD,MAAO,CACLW,cAAe,YACfH,SAAU,OACVC,cAAe,WAIrB,CACE9D,OAAQ,CACNqD,MAAO,CACLE,WAAY,OACZW,WAAY,SAGhBzD,MAAOY,EAAiB4B,IAAe,GAEzC,CACExC,MAAO,UACPT,OAAQ,CACNqD,MAAO,CACLW,cAAe,YACfH,SAAU,OACVC,cAAe,WAIrB,CACE9D,OAAQ,CACNqD,MAAO,CACLE,WAAY,OACZW,WAAY,SAGhBzD,MAAOY,EAAiB+B,IAAgB,KFtKzBe,CAAS,CAC1B3B,kBACAC,eACAC,kBACAQ,YA3BkC,EAelCA,YAaAH,WA5BkC,EAgBlCA,WAaAI,YA7BkC,EAiBlCA,YAaAH,WA9BkC,EAkBlCA,WAaAI,YA/BkC,EAmBlCA,YAaAH,WAhCkC,EAoBlCA,aAeImB,EAAiBC,OAAOC,KAAKrE,GAEnC,OACE,yBAAKU,UAAWX,EAAOiC,WACrB,kBAACsC,EAAA,EAAD,CAAMtC,WAAS,EAACuC,QAAS,EAAG7D,UAAWX,EAAO6B,KAAM4C,QAAQ,UACzDC,MAAMC,KAAK,CAAEhD,OAAQY,IAAY,SAACqC,EAAGxE,GAAJ,OAChC,kBAACmE,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAG1E,IAAKF,EAAGO,UAAWX,EAAOoC,UACzD,kBAAC,EAAD,CACEtC,QAASG,EAAWmE,EAAehE,IACnCL,KAAMqE,EAAehE,Y,SG5EtB6E,EAAoB,SAAC3C,EAAM4C,EAAOjB,EAAOkB,GACpD,IAAIC,EAAY9C,EAAKpC,KAAI,gBAAGmF,EAAH,EAAGA,YAAgBC,EAAnB,qCAAoC,CAC3DC,EAAG,IAAIC,KAAKH,EAAYvE,MAAM,GAAK,SACnC2E,EACY,aAAVP,EACII,EAAUH,EAAQO,GACR,cAAVR,EACAI,EAAUH,EAAQQ,GAClBL,EAAUH,EAAQS,OAgC1B,MA7BuB,SAAnBT,EAAQU,SACVT,EAAYA,EAAUtE,OAAO,KAGR,UAAnBqE,EAAQU,SACVT,EAAYA,EAAUtE,OAAO,KAGf,CACdxB,gBAAiB2E,EACjB6B,YAAa7B,EACbiB,MAAOA,EACP5C,KAAM8C,EACNW,KACgB,oBAAdZ,EAAQO,IAEM,aAAVR,EACA,EACU,cAAVA,GACA,GAENc,YAAa,EACbC,YAA2B,oBAAdd,EAAQO,EAA0B,EAAI,EAEnDQ,YAAa,EAGbC,aAAa,I,mCCjCX/H,EAAYC,YAAW,CAC3BwD,KAAM,CACJrD,SAAU,WACVO,IAAK,EACLQ,MAAO,IAET6G,OAAQ,CACNvC,SAAU,QACVC,cAAe,OACfuC,WAAY,kDAuCDC,EAnCG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OACrBxG,EAAS5B,IACf,OACE,kBAACqI,EAAA,EAAD,CACE9F,UAAWX,EAAO6B,KAClBoC,MAAM,UACNhD,QAAQ,OACRyF,aAAW,4BACXC,KAAK,SAEL,kBAACC,EAAA,EAAD,CACEC,QAAS,kBAAMN,EAAO,UACtBlD,MAAO,CAAE/D,gBAA4B,UAAXkH,EAAqB,UAAY,IAC3D7F,UAAWX,EAAOoG,QAHpB,SAOA,kBAACQ,EAAA,EAAD,CACEC,QAAS,kBAAMN,EAAO,SACtB5F,UAAWX,EAAOoG,OAClB/C,MAAO,CAAE/D,gBAA4B,SAAXkH,EAAoB,UAAY,KAH5D,WAOA,kBAACI,EAAA,EAAD,CACEC,QAAS,kBAAMN,EAAO,UACtB5F,UAAWX,EAAOoG,OAClB/C,MAAO,CAAE/D,gBAA4B,UAAXkH,EAAqB,UAAY,KAH7D,a,aCjCNM,IAAMC,OAAOC,UAAUC,SAAW,WAChCC,KAAKrI,OAASqI,KAAKrI,OAAS,IAG9B,IAuJesI,EA9HG,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,QAASC,EAA8C,EAA9CA,UAAWV,EAAmC,EAAnCA,KAAMxG,EAA6B,EAA7BA,OAAQoG,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OACvDc,EA1BU,SAACX,EAAMxG,GAAP,OAChB9B,aAAW,SAACuD,GAAW,IAAD,EACd5B,EAAS,CACb6B,MAAI,GACFhD,OAAQsB,EAAOoH,aADb,cAED3F,EAAME,YAAY0F,KAAK5F,EAAME,YAAYlD,MAAM,WAAa,CAC3DC,OAAQsB,EAAOsH,cAHf,yBAKQ,YALR,wBAMO,oBANP,0BAQA,kHARA,IAmBN,OARId,EAAO,KACT3G,EAAO6B,KAAKD,EAAME,YAAYK,GAAG,OAAS,CACxC/C,UAAW,cAEbY,EAAO6B,KAAKD,EAAME,YAAY4F,KAAK,OAAS,CAC1CtI,UAAW,QAGRY,KAIO5B,CAAUuI,EAAMxG,EAAhB/B,GAEVuJ,EAAiBC,YAAc,sBAC/BC,EAAiBD,YAAc,sBAOrC,OACE,kBAACrD,EAAA,EAAD,CAAMM,MAAI,EAACiD,UAAWpH,IAAMoE,GAAI,GAAIE,GAAI2B,EAAMhG,UAAW2G,EAAQzF,MAC9D1B,EAAO0F,QAAU,kBAAC,EAAD,CAAWW,OAAQA,EAAQD,OAAQA,IACrD,kBAAC,IAAD,CACEjE,KAAM,CACJyF,SAAU,CACRV,EAAUW,UACVX,EAAU1H,UACV0H,EAAUzH,WAGduF,QAAS,CACP8C,MAAO,CACL5I,SAAS,EACT6I,KAAK,GAAD,OAAKd,EAAL,cAAkBjH,EAAO8H,OAC7BpE,SAAU,GACVP,QAAS,GAEX6E,SAAU,CACRC,KAAM,cACNC,WAAW,EACXC,UAAW,CACTpD,MAAO,SAACqD,EAAajG,GACnB,IAAM4C,EAAQ5C,EAAKyF,SAASQ,EAAYC,cAActD,MACtD,MAAM,IAAN,OAAWA,EAAX,aAAqB7D,EACnBkH,EAAYE,OAAOC,QAAQ,MAG/BT,MAAO,SAACM,GACN,IAAMN,EAAQM,EAAY,GAAGI,OAC7B,MAAM,GAAN,OAAU,IAAInD,KAAKyC,GAAOW,kBAG9BC,UAAW,OACXC,WAAY,SACZC,cAAe,GACfC,kBAAmB,EACnBC,aAAc,GACdC,SAAU,GACVC,SAAU,IAEZC,OAAQ,CACN9F,QAAS,CACPvE,IAAKoB,EAAO0F,OAAS,GAAK,GAC1BtG,MAAO,KAGX8J,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLC,aAAa,EACbC,SAAU,SAAChJ,GAAD,OAAWY,EAAiBZ,KAExCiJ,UAAW,CACTC,WAAY,CAAC,EAAG,GAChBC,cAAe,IACfC,cAAe,wBAIrBC,MAAO,CACL,CACEJ,UAAW,CACTC,WAAY,CAAC,EAAG,GAEhBE,cAAe,qBACfE,mBACEpD,EAAO,EACFgB,GAAkB,CAAC,EAAG,KAAO,EAC7BE,GAAkB,CAAC,EAAG,KAAO,GAEtC9H,KAAM,OACNwJ,MAAO,CACLS,UAAU,EACVC,cAAe9J,EAAO8J,cACtBC,YAAa,OAKrBC,MAAO,CACLC,QAAS,SAACC,EAAOC,GACfD,EAAME,OAAOlH,MAAMmH,OAASF,EAAa,GACrC,UACA,YAGRG,OAAQ,CACNL,QAAS,SAACC,GACRA,EAAME,OAAOlH,MAAMmH,OAAS,YAGhCE,QAAS,CACPC,UAAW,CACTC,KAAM,CACJC,SAAS,GAEXC,KAAM,CACJD,SAAS,IAGbE,SAAU,CACRC,QAAS,MACTtH,MAAO,MAGXuH,YAAY,EACZC,qBAAqB,OClBhBC,EA7GE,SAAC,GAIX,IAHL/D,EAGI,EAHJA,QACAT,EAEI,EAFJA,KAEI,IADJyE,UAAapD,EACT,EADSA,UAAWqD,EACpB,EADoBA,OAAQ1L,EAC5B,EAD4BA,UAE1B2H,EA7BU,SAACX,GAAD,OAChBtI,aAAW,SAACuD,GAAW,IAAD,EACd5B,EAAS,CACb6B,MAAI,GACFhD,OAAQ,SADN,cAED+C,EAAME,YAAY0F,KAAK5F,EAAME,YAAYlD,MAAM,WAAa,CAC3DC,OAAQ,UAHR,wBAKO,oBALP,0BAOA,kHAPA,IAkBN,OARI8H,EAAO,KACT3G,EAAO6B,KAAKD,EAAME,YAAYK,GAAG,OAAS,CACxC/C,UAAW,cAEbY,EAAO6B,KAAKD,EAAME,YAAY4F,KAAK,OAAS,CAC1CtI,UAAW,QAGRY,KAQO5B,CAAUuI,EAAVvI,GAChB,OACE,kBAACmG,EAAA,EAAD,CACEM,MAAI,EACJiD,UAAWpH,IACXoE,GAAI,GACJC,GAAI,EACJC,GAAI2B,EACJhG,UAAW2G,EAAQzF,MAEnB,kBAAC,IAAD,CACES,KAAM,CACJgJ,OAAQ,CAAC,WAAY,YAAa,YAClCvD,SAAU,CACR,CACE7C,MAAO,SACP5F,gBAAiB,CACf,0BACA,yBACA,0BAEF2G,YAAa,IACbsF,qBAAsB,CACpB,yBACA,yBACA,0BAEFC,iBAAkB,CAChB,wBACA,wBACA,yBAEFlJ,KAAM,CAAC0F,EAAWrI,EAAW0L,MAInClG,QAAS,CACPsF,OAAQ,CACNpL,SAAS,GAEX4I,MAAO,CACL5I,SAAS,EACTiE,QAAS,EACTO,SAAU,GACVqE,KAAMd,EAAU,YAElBiC,OAAQ,CACNS,MAAO,CACL,CACEJ,UAAW,CAETC,WAAY,CAAC,EAAG,MAItBL,MAAO,CACL,CACEC,MAAO,CACLC,aAAa,EACbC,SAAU,SAAChJ,GAAD,OAAWY,EAAiBZ,KAExCiJ,UAAW,CACTC,WAAY,CAAC,EAAG,OAKxBxB,SAAU,CACRU,UAAW,SACXC,WAAY,SACZC,cAAe,GACfC,kBAAmB,EACnBC,aAAc,GACdC,SAAU,GACVC,SAAU,GACVb,UAAW,CACTpD,MAAO,SAACqD,EAAajG,GACnB,IAAM4C,EAAQ5C,EAAKyF,SAASQ,EAAYC,cAActD,MACtD,MAAM,aAAN,OAAoBA,EAApB,aAA8B7D,EAC5BkH,EAAY9H,WAKpB2I,OAAQ,CACN9F,QAAS,CACPvE,IAAK,KAGT2L,QAAS,CACPC,WAAW,EACXI,SAAU,CACRC,QAAS,MACTtH,MAAO,MAGXuH,YAAY,EACZC,qBAAqB,OCvFhBO,EAxCG,SAAC,GAAmD,IAChEC,EACAtE,EAFerH,EAAgD,EAAhDA,KAAM4G,EAA0C,EAA1CA,KAAMrE,EAAoC,EAApCA,KAAM6C,EAA8B,EAA9BA,QAAShF,EAAqB,EAArBA,OAAQoG,EAAa,EAAbA,OAqCtD,OA9BEmF,EADW,SAAT3L,EACU,CACViI,UAAW/C,EAAkB3C,EAAM,WAAY,YAAa6C,GAC5DxF,UAAWsF,EAAkB3C,EAAM,YAAa,YAAa6C,GAC7DvF,SAAUqF,EACR3C,EACA,WACA,yBACA6C,IAIK,eAAQ7C,EAAKA,EAAKX,OAAS,IAEtCyF,EAAU9E,EAAK,GAAG8E,QAIP,SAATrH,EACE,kBAAC,EAAD,CACEsH,UAAWqE,EACX/E,KAAMA,EACNS,QAASA,EACTjH,OAAQA,EACRoG,OAAQA,EACRC,OAAQrB,EAAQU,SAGlB,kBAAC,EAAD,CAAUuF,UAAWM,EAAWtE,QAASA,EAAST,KAAMA,K,kBCvCjDgF,EAAsB,SAACC,GAClC,OAAQA,GACN,IAAK,QACH,MAAO,KACT,IAAK,UACH,MAAO,KACT,IAAK,sBACH,MAAO,KACT,IAAK,mBACH,MAAO,KACT,IAAI,gBACF,MAAO,KACT,IAAK,mBACH,OAAO,KACT,IAAK,SACH,MAAO,KACT,IAAK,OACH,MAAO,KACT,IAAK,aAEL,IAAK,SACH,OAAO,KACT,IAAK,qBACH,MAAO,KACT,QACE,OAAOA,ICnBPxN,EAAYC,aAAW,SAACuD,GAAD,MAAY,CACvCiK,aAAa,aACXC,SAAU,MACVlN,MAAO,IACPsD,OAAQ,SACPN,EAAME,YAAY0F,KAAK,MAAQ,CAC9B5I,MAAO,QAGXmN,OAAQ,CACNlI,SAAU,GACV,WAAY,CACVmI,YAAa,GACbnI,SAAU,SAgEDoI,MAAMC,MA3DC,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,gBAAiBC,EAA0B,EAA1BA,oBAClC9E,EAAUlJ,IACViO,EAAc,GAEpB,GAAIF,EAAgBG,OAAQ,CAC1B,IAAK,IAAIlF,KAAW+E,EAClBE,EAAYE,KAAK,CACfnF,QAAS+E,EAAgB/E,GAAS,GAAGA,QACrCoF,YAAab,EACXQ,EAAgB/E,GAAS,GAAGoF,aAE9BC,YACEN,EAAgB/E,GAAS,GAAGA,UAC5B+E,EAAgB/E,GAAS,GAAGoF,cAGlCH,EAAYK,MAAK,SAAChH,EAAGC,GAAJ,OAAWD,EAAE0B,QAAUzB,EAAEyB,QAAU,GAAK,KAG3D,OACE,kBAACuF,EAAA,EAAD,CACEC,GAAG,iBACHzH,QAASkH,EACT/E,QAAS,CAAEyE,OAAQzE,EAAQyE,OAAQlK,KAAMyF,EAAQuE,cACjDgB,eAAa,EACbhB,cAAY,EACZiB,oBAAkB,EAClBC,SAAU,SAACC,EAAGC,GACZ,GAAKA,EAAL,CACA,IAAMC,EAAeD,EAASR,YAC1BQ,EAAS7F,QACT6F,EAAST,YACbJ,EAAoBc,KAEtBC,eAAgB,SAACpB,GAAD,OAAYA,EAAO3E,SACnCgG,aAAc,SAACrB,GAAD,OACZ,oCACE,8BC7DmB,SAACsB,GAC5B,GAAKA,EACL,MAAuC,qBAAzBC,OAAOC,cACjBF,EACGG,cACAC,QAAQ,MAAM,SAACC,GAAD,OACbJ,OAAOC,cAAcG,EAAKC,WAAW,GAAK,WAE9CN,EDqDWO,CAAc7B,EAAOS,cAAqB,IADnD,UAE6B,OAAvBT,EAAOS,YAAuB,iBAAmBT,EAAO3E,WAGhEyG,YAAa,SAACC,GAGZ,OAFmBA,EAAOC,WACflC,aAAe,MAExB,kBAACmC,EAAA,EAAD,iBACMF,EADN,CAEE5I,MAAM,UACNjE,QAAQ,WACR8M,WAAU,eACLD,EAAOC,qB,gBErElB3P,EAAYC,aAAW,SAACuD,GAAD,MAAY,CACvCC,KAAK,aACHoM,UAAW,QACXC,WAAY,SACZ5K,QAAS,OACT6K,UAAW,SACXtP,OAAQ,OACRS,gBAAiBsC,EAAMwM,QAAQC,QAAQC,MACtC1M,EAAME,YAAY0F,KAAK5F,EAAME,YAAYyM,OAAOC,QAAU,CACzDC,cAAe,SACf5P,OAAQ,OACRqF,WAAY,OACZH,cAAe,SAGnB2K,SAAU,CACRxK,WAAY,OAEdyK,MAAO,CACLC,SAAU,GAEZC,SAAU,CACR9K,cAAe,OAEjBmE,KAAM,CACJjE,MAAO,OACPuG,OAAQ,UACRvL,QAAS,IAEX6P,KAAM,CACJ5P,WAAY,kDACZ,UAAW,CACTD,QAAS,KAGb8P,OAAQ,CACNC,eAAgB,OAChB/P,QAAS,GACTT,SAAU,WACV,YAAa,CACXG,QAAS,KACTH,SAAU,WACVI,MAAO,OACPC,OAAQ,MACRoQ,OAAQ,EACRjQ,KAAM,EACNM,gBAAiB,OACjB4P,WAAY,SACZ1P,UAAW,YACXN,WAAY,0BAEd,kBAAmB,CACjBgQ,WAAY,UACZ1P,UAAW,aAEb,aAAc,CACZyE,MAAO,aAqDEkL,EAhDA,WACb,IAAM7H,EAAUlJ,IAChB,OACE,kBAACmG,EAAA,EAAD,CAAMtC,WAAS,EAACtB,UAAW2G,EAAQzF,MACjC,kBAAC0C,EAAA,EAAD,CAAMM,MAAI,EAAClE,UAAW2G,EAAQoH,UAC5B,kBAACrO,EAAA,EAAD,CAAYM,UAAW2G,EAAQY,KAAM7I,QAAQ,UAA7C,sBACsB,KAEtB,uBACEkL,OAAO,SACP5J,UAAW,CAAC2G,EAAQyH,OAAQzH,EAAQwH,MAAMlO,KAAK,KAC/CwO,IAAI,sBACJC,KAAK,yFAEL,kBAAChP,EAAA,EAAD,CAAYhB,QAAQ,UAApB,kCAGG,IACL,kBAACgB,EAAA,EAAD,CAAYhB,QAAQ,SAASsB,UAAW2G,EAAQY,MAAhD,MACM,KAEN,uBACEqC,OAAO,SACP5J,UAAW,CAAC2G,EAAQyH,OAAQzH,EAAQwH,MAAMlO,KAAK,KAC/CwO,IAAI,sBACJC,KAAK,6CAEL,kBAAChP,EAAA,EAAD,CAAYhB,QAAQ,UAApB,mBAGJ,kBAACkF,EAAA,EAAD,CAAMM,MAAI,EAAClE,UAAW2G,EAAQqH,OAC5B,kBAACtO,EAAA,EAAD,CAAYM,UAAW2G,EAAQuH,SAAUtO,MAAM,SAC7C,0BAAMI,UAAW,CAAC2G,EAAQY,KAAMZ,EAAQwH,MAAMlO,KAAK,MAAnD,aACa,IACX,kBAAC,IAAD,CACE+F,KAAK,KACLnH,UAAU,SACV8P,MAAI,EACJjM,MAAO,CAAEkM,kBAAmB,MAC5BC,KAAMC,W,kCC7FdrR,EAAYC,YAAW,CAC3BwD,KAAM,CACJ+M,SAAU,GAEZc,QAAS,CACPpM,QAAS,QAEX2E,MAAO,CACL2G,SAAU,EACV9K,cAAe,SACfG,MAAO,WAET0L,OAAQ,CACNnF,OAAQ,UACRvL,QAAS,KACTC,WAAY,kDACZ,UAAW,CACTD,QAAS,OAGb8P,OAAQ,CACNC,eAAgB,OAChB/K,MAAO,aAwCI2L,EApCE,WACf,IAAMtI,EAAUlJ,IACVwD,EAAQiO,cAEd,OACE,yBAAKlP,UAAW2G,EAAQzF,MACtB,kBAACiO,EAAA,EAAD,CAAQtR,SAAS,UACf,kBAACuR,EAAA,EAAD,CAASpP,UAAW2G,EAAQoI,SAC1B,kBAACrP,EAAA,EAAD,CAAYY,QAAQ,KAAKV,MAAM,SAASI,UAAW2G,EAAQW,OAA3D,IAEE,0BAAM5E,MAAO,CAAE2M,aAAc,WAC3B,kBAAC,IAAD,CACEV,MAAI,EACJrL,MAAOrC,EAAMwM,QAAQ6B,UAAU3B,KAC/BkB,KAAMU,IACN7M,MAAO,CAAEkM,kBAAmB,SAPlC,mBAYA,0BAAM5O,UAAW2G,EAAQqI,QACvB,uBACEpF,OAAO,SACP8E,KAAK,gDACLD,IAAI,sBACJzO,UAAW2G,EAAQyH,QAEnB,kBAAC,IAAD,CAAiBS,KAAMW,IAAUxJ,KAAK,a,kBC5D9CvI,EAAYC,aAAW,SAACuD,GAAD,MAAY,CACvCC,KAAM,CACJyB,QAAS,OACT2K,UAAW,QAEbmC,KAAM,CACJnM,MAAOrC,EAAMwM,QAAQ6B,UAAUI,KAC/BpC,UAAW,IAEbhG,MAAO,CACL5I,QAAS,eACT8O,UAAW,UAEb/H,OAAO,aACL5G,UAAW,oBACXH,QAAS,gBACRuC,EAAME,YAAY0F,KAAK,KAAO,CAC7BnI,QAAS,QACTG,UAAW,OACX2O,UAAW,SACXF,UAAW,KAGfqC,QAAS,CACPhR,gBAAiBsC,EAAMwM,QAAQC,QAAQC,KACvCzK,SAAUjC,EAAM3B,WAAWsQ,QAAQ,IACnCtM,MAAOrC,EAAMwM,QAAQ6B,UAAU3B,KAC/BkC,SAAU,KAEZhB,KAAM,CACJvL,MAAOrC,EAAMwM,QAAQC,QAAQrN,MAC7B9B,WAAY,0BACZ,UAAW,CACT+E,MAAOrC,EAAMwM,QAAQ6B,UAAU3B,WA+CtBmC,EA1CD,SAAC,GAA2B,IAEpCL,EAFWM,EAAwB,EAAxBA,KAAM7N,EAAkB,EAAlBA,YACf7C,EAAS5B,IAEXyE,EAAYlB,SACdyO,EAAO,IAAI5K,KACT3C,EAAYA,EAAYlB,OAAS,GAAG0D,YAAYvE,MAAM,GAAtD,YACM,IAAI0E,MAAOmL,gBACjBC,mBAAmB,GAAI,CACvBC,QAAS,OACTC,KAAM,UACNC,MAAO,OACPC,IAAK,aAIT,OACE,yBAAKrQ,UAAWX,EAAO6B,MACrB,kBAACxB,EAAA,EAAD,CAAY4D,MAAM,UAAUhD,QAAQ,KAAKN,UAAWX,EAAOiI,OACxDyI,EAAM,KAET,kBAACO,EAAA,EAAD,CACEhJ,MAPW,6FAQXX,QAAS,CAAEgJ,QAAStQ,EAAOsQ,SAC3BY,UAAU,MACVC,OAAK,EACLC,oBAAqBC,IACrBC,gBAAiB,CAAEC,QAAS,MAE5B,yBAAK5Q,UAAWX,EAAOoG,QACrB,kBAAC,IAAD,CACEoJ,KAAMgC,IACN7Q,UAAWX,EAAOwP,SAIxB,kBAACnP,EAAA,EAAD,CAAYE,MAAM,SAASI,UAAWX,EAAOoQ,MAA7C,kBACkBA,K,wCCtDTqB,G,+MAtBbC,MAAQ,CAAEC,UAAU,EAAOC,MAAO,M,iEAOhBA,EAAOC,GAEvBC,QAAQC,IAAIH,EAAOC,K,+BAInB,OAAI3K,KAAKwK,MAAMC,SAEN,qDAA2BzK,KAAKwK,MAAME,MAAMI,SAG9C9K,KAAK+K,MAAMC,Y,gDAhBYN,GAE9B,MAAO,CAAED,UAAU,EAAMC,a,GALD3F,IAAMkG,W,oBCiBnBC,GAhBC,kBACd,yBAAKzR,UAAW2G,KAAQrF,WACtB,yBAAKtB,UAAW2G,KAAQ+K,UACtB,yBAAK1R,UAAW,CAAC2G,KAAQgL,KAAMhL,KAAQiL,OAAO3R,KAAK,OACnD,yBAAKD,UAAW,CAAC2G,KAAQgL,KAAMhL,KAAQkL,OAAO5R,KAAK,OACnD,yBAAKD,UAAW,CAAC2G,KAAQgL,KAAMhL,KAAQmL,OAAO7R,KAAK,OACnD,yBAAKD,UAAW,CAAC2G,KAAQgL,KAAMhL,KAAQoL,OAAO9R,KAAK,OACnD,yBAAKD,UAAW,CAAC2G,KAAQgL,KAAMhL,KAAQqL,OAAO/R,KAAK,OACnD,yBAAKD,UAAW,CAAC2G,KAAQgL,KAAMhL,KAAQsL,OAAOhS,KAAK,OACnD,yBAAKD,UAAW,CAAC2G,KAAQgL,KAAMhL,KAAQuL,OAAOjS,KAAK,OACnD,yBAAKD,UAAW,CAAC2G,KAAQgL,KAAMhL,KAAQwL,OAAOlS,KAAK,OACnD,yBAAKD,UAAW,CAAC2G,KAAQgL,KAAMhL,KAAQyL,OAAOnS,KAAK,UCd5CoS,GAAc,SACzBzL,EACAE,EACAQ,EACAgC,EACApE,GALyB,MAMrB,CACJ0B,cACAE,cACAQ,QACAgC,gBACApE,WCLIzH,GAAYC,aAAW,SAACuD,GAAD,YAAY,CACvCC,MAAI,GACFxC,QAAS,OACToP,cAAe,SACfP,WAAY,UAHV,cAIDtM,EAAME,YAAY0F,KAAK,MAAQ,CAC9BtF,OAAQ,SALR,cAODN,EAAME,YAAYK,GAAG,MAAQ,CAC5BmB,QAAS,SART,GAWJrB,UAAW,CACTgM,UAAW,IAEbgF,QAAQ,aACN7T,UAAW,MACVwC,EAAME,YAAY0F,KAAK,MAAQ,CAC9B3I,OAAQ,aAwGCqU,GAnGI,SAAC,GAAkB,IAC9BC,EAD6B,EAAfC,SACUC,QAAQC,OADH,EAEXC,mBAASJ,GAFE,mBAE5B7Q,EAF4B,KAEtBkR,EAFsB,KAG7BxT,EAAS5B,KAuBTgO,EAAsBqH,uBAAY,SAACrM,GACvCoM,GAAQ,SAACE,GAAD,mBAAC,eACJA,GADG,IAENC,mBAAoBD,EAAaE,aAAaxM,UAE/C,IAQGyM,EAAsB,CAC1BnO,EAAG,YACHC,EAAG,YACHC,EAAG,SACHC,OAAQvD,EAAKuD,QAGTiO,EAAqB,CACzBpO,EAAG,kBACHC,EAAG,kBACHC,EAAG,eACHC,OAAQvD,EAAKuD,QAGTkO,EAAoBf,GACxB,QACA,QACA,iBACA,IACA,GAEIgB,EAAqBhB,GAAY,QAAS,QAAS,cAAe,IAExE,OACE,yBAAKrS,UAAWX,EAAO6B,MACrB,kBAAC,EAAD,CAAO6O,KAAK,gBAAgB7N,YAAaP,EAAKqR,qBAC9C,kBAAC,EAAD,CAAOpR,SAAU,EAAGD,KAAMA,EAAKqR,mBAAmB7S,OAAO,MACzD,kBAAC,EAAD,CACEqL,gBAAiB7J,EAAKsR,aACtBxH,oBAAqBA,IAEvB,kBAAC7H,EAAA,EAAD,CACEtC,WAAS,EACTwC,QAAQ,SACR6C,QAAS,CAAErF,UAAWjC,EAAOiC,YAE7B,kBAAC6E,EAAD,CACExE,KAAMA,EAAKqR,mBACXhN,KAAM,GACN5G,KAAK,OACLoF,QAAS2O,EACT3T,OAAQ4T,EACRxN,OAhDa,SAAC9F,GAAD,OACnB+S,GAAQ,SAACE,GAAD,mBAAC,eACJA,GADG,IAEN7N,OAAQpF,WAgDR,kBAAC8D,EAAA,EAAD,CAAMtC,WAAS,EAACwC,QAAQ,SAAS9D,UAAWX,EAAOiC,WACjD,kBAAC6E,EAAD,CAAOxE,KAAMA,EAAKqR,mBAAoBhN,KAAM,EAAG5G,KAAK,QACpD,yBAAKY,UAAWX,EAAOiT,UACvB,kBAACnM,EAAD,CACExE,KAAMA,EAAKqR,mBACXhN,KAAM,EACN5G,KAAK,OACLoF,QAAS0O,EACT1T,OAAQ6T,O,qBCtHlB,IAAMC,GAAc,SAACC,GACnB,IACIC,EADAC,EAAS,UAETC,EAAYH,EAAQI,MACtB,SAACC,GACCH,EAAS,UACTD,EAASI,KAEX,SAACvH,GACCoH,EAAS,QACTD,EAASnH,KAIb,MAAO,CACLsG,KADK,WAEH,GAAe,YAAXc,EACF,MAAMC,EACD,GAAe,UAAXD,EACT,MAAMD,EAEN,OAAOA,K,oBCjBTf,GDuCG,CACLC,QAASY,GAhBJO,KACJC,IACC,mFAEDH,MAAK,SAACH,GACL,IAAMP,EEdZ,SAA2BA,GACzB,IAAMc,EAAmB,GAEzB,IAAK,IAAItN,KAAWwM,GAEhBA,EAAaxM,GAASzF,OAAS,IACnB,OAAZyF,GACY,OAAZA,GACY,OAAZA,KAEAsN,EAAiBtN,GAAWwM,EAAaxM,IAG7C,OAAOsN,EAhBAC,CFiBiCR,EAAO7R,KAAKsR,aEnC3BjR,QACvB,SAACE,EAAa+R,GAaZ,OAZKA,EAAQC,cACXD,EAAQxN,QAAU,SAClBwN,EAAQpI,YAAc,SACtB3J,EAAYyJ,OAAOC,KAAKqI,GAExBA,EAAQE,UAAUC,SAAQ,SAAC3N,GACzBA,EAAQ/B,YAAcuP,EAAQvP,YAC9BxC,EAAYuE,EAAQoF,aAChB3J,EAAYuE,EAAQoF,aAAaD,KAAKnF,GACrCvE,EAAYuE,EAAQoF,aAAe,CAACpF,OAGtCvE,IAET,CAAEyJ,OAAQ,MFoBR,MAAO,CACLsH,eACAD,mBAAoBC,EAAatH,OACjCzG,OAAQ,cCXDmP,GApBH,WACV,OACE,yBAAKrU,UAAW2G,KAAQ2N,WACtB,gCACE,kBAAC,EAAD,OAEF,kBAAC,WAAD,CAAUC,SAAU,kBAAC,GAAD,OAClB,8BACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAY9B,SAAUA,OAG1B,gCACE,kBAAC,EAAD,U,oBEnBGxR,GAAQuT,aAAe,CAClCrT,YAAa,CACXwC,KAAM,CAAC,KAAM,KAAM,SAAU,KAAM,SAAU,KAAM,MACnDiK,OAAQ,CACNzJ,GAAI,EACJC,GAAI,IACJyJ,OAAQ,IACRxJ,GAAI,IACJoQ,OAAQ,KACRC,GAAI,KACJC,GAAI,OAGRlH,QAAS,CACPC,QAAS,CACPC,KAAM,UACNtN,MAAO,UACPqP,KAAM,WAERJ,UAAW,CACT3B,KAAM,UACNtN,MAAO,UACPqP,KAAM,cClBZkF,IAASC,OACP,kBAACC,GAAA,EAAD,CAAe7T,MAAOA,IACpB,kBAAC,GAAD,OAEF8T,SAASC,eAAe,U","file":"static/js/main.e4eefc74.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Spinner_container__3wPbR\",\"cubeGrid\":\"Spinner_cubeGrid__22mnb\",\"cube\":\"Spinner_cube__36hH5\",\"cubeGridScaleDelay\":\"Spinner_cubeGridScaleDelay__2GnLT\",\"cube1\":\"Spinner_cube1__1gmwN\",\"cube2\":\"Spinner_cube2__3q8k5\",\"cube3\":\"Spinner_cube3__VytRs\",\"cube4\":\"Spinner_cube4__y7nGN\",\"cube5\":\"Spinner_cube5__3tk3S\",\"cube6\":\"Spinner_cube6__1-HTA\",\"cube7\":\"Spinner_cube7__1C1Wf\",\"cube8\":\"Spinner_cube8__2u5-1\",\"cube9\":\"Spinner_cube9__2geRu\"};","import React from 'react';\nimport {\n  Card,\n  CardContent,\n  Typography,\n  makeStyles,\n  Divider,\n  Box\n} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport CountUp from 'react-countup';\n\nconst useStyles = makeStyles({\n  card: {\n    borderRadius: 12,\n    position: 'relative',\n    overflow: 'visible',\n    boxShadow:\n      '0 1px 1px rgba(0,0,0,0.11), 0 2px 2px rgba(0,0,0,0.11), 0 4px 4px rgba(0,0,0,0.11), 0 6px 8px rgba(0,0,0,0.11), 0 8px 16px rgba(0,0,0,0.11)',\n    // transition: 'all 0.3s ease-in-out',\n    '&::after': {\n      content: '\"\"',\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      zIndex: '-1',\n      top: 0,\n      left: 0,\n      opacity: 0,\n      boxShadow:\n        '0 2px 1px rgba(0,0,0,0.09), 0 4px 2px rgba(0,0,0,0.09), 0 8px 4px rgba(0,0,0,0.09), 0 16px 8px rgba(0,0,0,0.09), 0 32px 16px rgba(0,0,0,0.09)',\n      transition: 'all 0.6s cubic-bezier(0.165, 0.84, 0.44, 1)'\n    },\n    // '&:hover': {\n    //   transform: 'scale(1.1)'\n    // },\n    '&:hover::after': {\n      opacity: 1\n    }\n  },\n  box: {\n    flexBasis: '50%',\n    position: 'relative',\n    '&:not(:last-of-type)': {\n      '&:after': {\n        content: '\" \"',\n        display: 'block',\n        position: 'absolute',\n        height: '50%',\n        width: 1,\n        backgroundColor: 'rgb(0,0,0,.1)',\n        top: '50%',\n        right: 0,\n        transform: 'translateY(-50%)'\n      }\n    }\n  },\n  infected: {\n    borderBottom: '10px solid #7e57c2b0'\n  },\n  recovered: {\n    borderBottom: '10px solid #17f71785'\n  },\n  deceased: {\n    borderBottom: '10px solid rgba(244, 54, 54, .69)'\n  }\n});\n\nconst SummaryCard = ({ tConfig, type }) => {\n  const styles = useStyles();\n  const typography = tConfig.map((config, i) =>\n    i === 0 ? (\n      <Typography key={i} align=\"center\" {...config.styles}>\n        <CountUp {...config.cu_config} />\n      </Typography>\n    ) : (\n      <Typography key={i} align=\"center\" {...config.styles}>\n        {config.value}\n      </Typography>\n    )\n  );\n\n  return (\n    <Card className={[styles[type], styles.card].join(' ')}>\n      <CardContent>{typography.slice(0, 2)}</CardContent>\n      <Divider light variant=\"middle\" />\n      <Box display=\"flex\">\n        <Box p={2} flex=\"auto\" className={styles.box}>\n          {typography.slice(2, 4)}\n        </Box>\n        <Box p={2} flex=\"auto\" className={styles.box}>\n          {typography.slice(4, 6)}\n        </Box>\n      </Box>\n    </Card>\n  );\n};\n\nSummaryCard.propTypes = {\n  tConfig: PropTypes.array.isRequired,\n  type: PropTypes.string.isRequired\n};\n\nexport default SummaryCard;\n\n/*\nconst MuiCard = ({ tConfig, type }) => {\n  const styles = useStyles();\n  return (\n    <Card className={[styles[type], styles.card].join(' ')}>\n      <CardContent>\n        {tConfig.map((config, i) => {\n          if (typeof config.value === 'number') {\n            return (\n              <Typography align=\"center\" key={i} {...config.styles}>\n                <CountUp {...config.cu_config} />\n              </Typography>\n            );\n          }\n          return (\n            <Typography align=\"center\" key={i} {...config.styles}>\n              {config.value}\n            </Typography>\n          );\n        })}\n      </CardContent>\n    </Card>\n  );\n};\n*/\n","export const numberWithCommas = (n) => {\n  const numStr = n.toString();\n  let output = numStr.slice(-3);\n  let index = null;\n  for (let i = numStr.length - 4; i >= 0; i -= 3) {\n    // handles exception of first thousand\n    if (!index) {\n      output = numStr[i] + ',' + output;\n    } else {\n      output = numStr[i] + ',' + numStr.slice(i + 1, i + 3) + output;\n    }\n    // handles leftover numbers. if we reach i === 0, then there are none leftover\n    index = i ? i : null;\n  }\n  if (index) {\n    output = numStr.slice(0, index) + output;\n  }\n  return output;\n};\n","import React from 'react';\nimport { Grid, makeStyles } from '@material-ui/core';\nimport propTypes from 'prop-types';\n\nimport SummaryCard from './Card/SummaryCard';\nimport { cardInfo } from './util/card-info';\nimport { totalsForCard } from '../../utils/totalsForCard';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    [theme.breakpoints.between(768, 960)]: {\n      flexWrap: 'nowrap'\n    }\n  },\n  container: {\n    margin: '20px 0 30px',\n    [theme.breakpoints.between(768, 960)]: {\n      width: '85%'\n    },\n    [theme.breakpoints.up('md')]: {\n      width: '70%'\n    }\n  },\n  gridItem: {\n    [theme.breakpoints.between('sm', 768)]: {\n      // maxWidth: '65%',\n      // flexBasis: '55%'\n      width: 'auto'\n    }\n  }\n}));\n\nconst Cards = ({ data, quantity }) => {\n  const styles = useStyles();\n\n  /* with suspense, data.length check is no longer necessary\n  if (data.length) {\n    confirmedGrowth = data[data.length - 1].confirmedGrowth;\n    deathsGrowth = data[data.length - 1].deathsGrowth;\n    recoveredGrowth = data[data.length - 1].recoveredGrowth;\n  }\n  */\n  const confirmedGrowth = data[data.length - 1].confirmedGrowth;\n  const deathsGrowth = data[data.length - 1].deathsGrowth;\n  const recoveredGrowth = data[data.length - 1].recoveredGrowth;\n\n  const {\n    iMonthTotal,\n    iWeekTotal,\n    rMonthTotal,\n    rWeekTotal,\n    dMonthTotal,\n    dWeekTotal\n  } = totalsForCard(data);\n\n  const typography = cardInfo({\n    confirmedGrowth,\n    deathsGrowth,\n    recoveredGrowth,\n    iMonthTotal,\n    iWeekTotal,\n    rMonthTotal,\n    rWeekTotal,\n    dMonthTotal,\n    dWeekTotal\n  });\n\n  const typographyKeys = Object.keys(typography);\n\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={2} className={styles.root} justify=\"center\">\n        {Array.from({ length: quantity }, (_, i) => (\n          <Grid item xs={10} sm={6} md={4} key={i} className={styles.gridItem}>\n            <SummaryCard\n              tConfig={typography[typographyKeys[i]]}\n              type={typographyKeys[i]}\n            />\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nCards.propTypes = {\n  data: propTypes.array.isRequired,\n  quantity: propTypes.number.isRequired\n};\n\nexport default Cards;\n","export const totalsForCard = (arr) =>\n  arr.reduce(\n    (numbers, dailyReport, i, array) => {\n      if (i > array.length - 8) {\n        numbers.iWeekTotal += dailyReport.confirmedGrowth;\n        numbers.rWeekTotal += dailyReport.recoveredGrowth;\n        numbers.dWeekTotal += dailyReport.deathsGrowth;\n      }\n      numbers.iMonthTotal += dailyReport.confirmedGrowth;\n      numbers.rMonthTotal += dailyReport.recoveredGrowth;\n      numbers.dMonthTotal += dailyReport.deathsGrowth;\n\n      return numbers;\n    },\n    {\n      iMonthTotal: 0,\n      iWeekTotal: 0,\n      rMonthTotal: 0,\n      rWeekTotal: 0,\n      dMonthTotal: 0,\n      dWeekTotal: 0\n    }\n  );\n","import { numberWithCommas } from '../../../utils/numberWithCommas';\n\nexport const cardInfo = ({\n  confirmedGrowth,\n  deathsGrowth,\n  recoveredGrowth,\n  iMonthTotal,\n  iWeekTotal,\n  rMonthTotal,\n  rWeekTotal,\n  dMonthTotal,\n  dWeekTotal\n}) => ({\n  infected: [\n    {\n      styles: {\n        variant: 'h5',\n        style: {\n          padding: '15px 0 15px 0',\n          fontWeight: 'bold'\n        }\n      },\n      value: confirmedGrowth,\n      cu_config: {\n        start: 0,\n        end: confirmedGrowth || 0,\n        delay: 0.3,\n        separator: ',',\n        duration: 4.7\n      }\n    },\n    {\n      value: 'Infected',\n      styles: {\n        fontSize: 12,\n        style: {\n          letterSpacing: '1.5px',\n          fontSize: '14px',\n          paddingBottom: '10px',\n          textTransform: 'uppercase',\n          color: 'blueviolet'\n        }\n      }\n    },\n    {\n      value: 'Last 7',\n      styles: {\n        style: {\n          textTransform: 'uppercase',\n          fontSize: '12px',\n          letterSpacing: '1.5px'\n        }\n      }\n    },\n    {\n      styles: {\n        style: {\n          fontWeight: 'bold',\n          paddingTop: '15px'\n        }\n      },\n      value: numberWithCommas(iWeekTotal) || 0\n    },\n    {\n      value: 'Last 30',\n      styles: {\n        style: {\n          textTransform: 'uppercase',\n          fontSize: '12px',\n          letterSpacing: '1.5px'\n        }\n      }\n    },\n    {\n      styles: {\n        style: {\n          fontWeight: 'bold',\n          paddingTop: '15px'\n        }\n      },\n      value: numberWithCommas(iMonthTotal) || 0\n    }\n  ],\n  recovered: [\n    {\n      styles: {\n        variant: 'h5',\n        style: {\n          padding: '15px 0 15px 0',\n          fontWeight: 'bold'\n        }\n      },\n      value: recoveredGrowth,\n      cu_config: {\n        start: 0,\n        end: recoveredGrowth || 0,\n        delay: 0.3,\n        separator: ',',\n        duration: 2.5\n      }\n    },\n    {\n      value: 'Recovered',\n      styles: {\n        fontSize: 12,\n        style: {\n          letterSpacing: '1.5px',\n          fontSize: '14px',\n          paddingBottom: '10px',\n          color: 'darkgreen',\n          textTransform: 'uppercase'\n        }\n      }\n    },\n    {\n      value: 'Last 7',\n      styles: {\n        style: {\n          textTransform: 'uppercase',\n          fontSize: '12px',\n          letterSpacing: '1.5px'\n        }\n      }\n    },\n    {\n      styles: {\n        style: {\n          fontWeight: 'bold',\n          paddingTop: '15px'\n        }\n      },\n      value: numberWithCommas(rWeekTotal) || 0\n    },\n    {\n      value: 'Last 30',\n      styles: {\n        style: {\n          textTransform: 'uppercase',\n          fontSize: '12px',\n          letterSpacing: '1.5px'\n        }\n      }\n    },\n    {\n      styles: {\n        style: {\n          fontWeight: 'bold',\n          paddingTop: '15px'\n        }\n      },\n      value: numberWithCommas(rMonthTotal) || 0\n    }\n  ],\n  deceased: [\n    {\n      styles: {\n        variant: 'h5',\n        style: {\n          padding: '15px 0 15px 0',\n          fontWeight: 'bold'\n        }\n      },\n      value: deathsGrowth,\n      cu_config: {\n        start: 0,\n        end: deathsGrowth || 0,\n        delay: 0.3,\n        separator: ',',\n        duration: 1.35\n      }\n    },\n    {\n      value: 'Deceased',\n      styles: {\n        color: 'textSecondary',\n        fontSize: 12,\n        style: {\n          letterSpacing: '1.5px',\n          fontSize: '14px',\n          paddingBottom: '10px',\n          textTransform: 'uppercase',\n          color: 'crimson'\n        }\n      }\n    },\n    {\n      value: 'Last 7',\n      styles: {\n        style: {\n          textTransform: 'uppercase',\n          fontSize: '12px',\n          letterSpacing: '1.5px'\n        }\n      }\n    },\n    {\n      styles: {\n        style: {\n          fontWeight: 'bold',\n          paddingTop: '15px'\n        }\n      },\n      value: numberWithCommas(dWeekTotal) || 0\n    },\n    {\n      value: 'Last 30',\n      styles: {\n        style: {\n          textTransform: 'uppercase',\n          fontSize: '12px',\n          letterSpacing: '1.5px'\n        }\n      }\n    },\n    {\n      styles: {\n        style: {\n          fontWeight: 'bold',\n          paddingTop: '15px'\n        }\n      },\n      value: numberWithCommas(dMonthTotal) || 0\n    }\n  ]\n});\n\n/*\n\n    recovered: [\n      {\n        styles: {\n          color: 'textSecondary',\n          variant: 'h6',\n          gutterBottom: true,\n          style: {\n            letterSpacing: '1.5px'\n          }\n        },\n        value: 'Recovered'\n      },\n      {\n        styles: {\n          variant: 'h5'\n        },\n        value: recoveredGrowth,\n        cu_config: {\n          start: 0,\n          end: recoveredGrowth,\n          delay: 0.3,\n          separator: ',',\n          duration: 2.5\n        }\n      },\n      {\n        styles: {\n          color: 'textSecondary'\n        },\n        value: updatedDate\n      },\n      {\n        styles: {\n          variant: 'body2'\n        },\n        value: 'Total amount of recoveries from COVID-19'\n      }\n    ],\n    */\n","export const generateLGDataset = (data, label, color, options) => {\n  let dataArray = data.map(({ updatedDate, ...dailyInfo }) => ({\n    x: new Date(updatedDate.slice(5) + '-2020'),\n    y:\n      label === 'Infected'\n        ? dailyInfo[options.a]\n        : label === 'Recovered'\n        ? dailyInfo[options.b]\n        : dailyInfo[options.c]\n  }));\n\n  if (options.filter === 'week') {\n    dataArray = dataArray.slice(-16);\n  }\n\n  if (options.filter === 'month') {\n    dataArray = dataArray.slice(-31);\n  }\n\n  const dataset = {\n    backgroundColor: color,\n    borderColor: color,\n    label: label,\n    data: dataArray,\n    fill:\n      options.a === 'confirmedGrowth'\n        ? false\n        : label === 'Infected'\n        ? 1\n        : label === 'Recovered'\n        ? 2\n        : true,\n    lineTension: 0,\n    borderWidth: options.a === 'confirmedGrowth' ? 2 : 4,\n    // pointRadius: [...new Array(128).fill(0), 3],\n    pointRadius: 0,\n    // pointBorderWidth: 3,\n    // pointHitRadius: 6,\n    interpolate: true\n  };\n  return dataset;\n};\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'absolute',\n    top: 8,\n    right: 10\n  },\n  button: {\n    fontSize: '.7rem',\n    letterSpacing: '.5px',\n    fontFamily: 'Helvetica Neue, Helvetica, Arial, sans-serif'\n  }\n});\n\nconst GPDtoggle = ({ toggle, tState }) => {\n  const styles = useStyles();\n  return (\n    <ButtonGroup\n      className={styles.root}\n      color=\"primary\"\n      variant=\"text\"\n      aria-label=\"text primary button group\"\n      size=\"small\"\n    >\n      <Button\n        onClick={() => toggle('total')}\n        style={{ backgroundColor: tState === 'total' ? '#ede7f6' : '' }}\n        className={styles.button}\n      >\n        Total\n      </Button>\n      <Button\n        onClick={() => toggle('week')}\n        className={styles.button}\n        style={{ backgroundColor: tState === 'week' ? '#ede7f6' : '' }}\n      >\n        Last 15\n      </Button>\n      <Button\n        onClick={() => toggle('month')}\n        className={styles.button}\n        style={{ backgroundColor: tState === 'month' ? '#ede7f6' : '' }}\n      >\n        Last 30\n      </Button>\n    </ButtonGroup>\n  );\n};\n\nexport default GPDtoggle;\n","import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Grid, Card, makeStyles, useMediaQuery } from '@material-ui/core';\nimport { numberWithCommas } from '../../../utils/numberWithCommas';\nimport { Chart } from 'react-chartjs-2';\nimport GPDtoggle from '../../ButtonGroup/GPDtoggle';\nimport 'chartjs-plugin-crosshair';\nimport 'chartjs-plugin-deferred';\n\nChart.Legend.prototype.afterFit = function () {\n  this.height = this.height + 10;\n};\n\nconst useStyles = (size, config) =>\n  makeStyles((theme) => {\n    const styles = {\n      root: {\n        height: config.heightLarge,\n        [theme.breakpoints.down(theme.breakpoints.width('tablet'))]: {\n          height: config.heightSmall\n        },\n        position: 'relative',\n        padding: '0 16px 22px 16px',\n        boxShadow:\n          '0 1px 1px rgba(0,0,0,0.15), 0 2px 2px rgba(0,0,0,0.15), 0 4px 4px rgba(0,0,0,0.15), 0 8px 8px rgba(0,0,0,0.15)'\n      }\n    };\n    if (size < 10) {\n      styles.root[theme.breakpoints.up('md')] = {\n        flexBasis: '40.666667%'\n      };\n      styles.root[theme.breakpoints.only('sm')] = {\n        flexBasis: '49%'\n      };\n    }\n    return styles;\n  });\n\nconst LineGraph = ({ country, dailyData, size, config, toggle, tState }) => {\n  const classes = useStyles(size, config)();\n  // address bug where zero line on y axis would protrude into graph\n  const zeroLineDashLG = useMediaQuery('(max-width: 496px)');\n  const zeroLineDashSM = useMediaQuery('(min-width: 600px)');\n\n  /* M-UI breakpoints.down() does not work on custom breakpoint keys. will send pull request\n  const tabletOrSmaller = useMediaQuery('(max-width: 768px)'); \n\n  console.log(theme.breakpoints.width('tablet')) returns 768; */\n\n  return (\n    <Grid item component={Card} xs={12} md={size} className={classes.root}>\n      {config.filter && <GPDtoggle tState={tState} toggle={toggle} />}\n      <Line\n        data={{\n          datasets: [\n            dailyData.confirmed,\n            dailyData.recovered,\n            dailyData.deceased\n          ]\n        }}\n        options={{\n          title: {\n            display: true,\n            text: `${country} - ${config.title}`,\n            fontSize: 14,\n            padding: 5\n          },\n          tooltips: {\n            mode: 'interpolate',\n            intersect: false,\n            callbacks: {\n              label: (tooltipItem, data) => {\n                const label = data.datasets[tooltipItem.datasetIndex].label;\n                return ` ${label}: ${numberWithCommas(\n                  tooltipItem.yLabel.toFixed(0)\n                )}`;\n              },\n              title: (tooltipItem) => {\n                const title = tooltipItem[0].xLabel;\n                return `${new Date(title).toDateString()}`;\n              }\n            },\n            bodyAlign: 'left',\n            titleAlign: 'center',\n            titleFontSize: 16,\n            titleMarginBottom: 8,\n            bodyFontSize: 14,\n            xPadding: 10,\n            yPadding: 10\n          },\n          layout: {\n            padding: {\n              top: config.filter ? 40 : 30,\n              right: 10 //15\n            }\n          },\n          scales: {\n            yAxes: [\n              {\n                ticks: {\n                  beginAtZero: false,\n                  callback: (value) => numberWithCommas(value)\n                },\n                gridLines: {\n                  borderDash: [8, 3],\n                  zeroLineWidth: 1.5,\n                  zeroLineColor: 'rgba(0, 0, 0, 0.3)'\n                }\n              }\n            ],\n            xAxes: [\n              {\n                gridLines: {\n                  borderDash: [8, 3],\n                  // zeroLineWidth: zeroLineDash ? 1 : 1.5,\n                  zeroLineColor: 'rgba(0, 0, 0, 0.1)',\n                  zeroLineBorderDash:\n                    size > 9\n                      ? (zeroLineDashLG && [8, 3]) || false\n                      : (zeroLineDashSM && [8, 3]) || false\n                },\n                type: 'time',\n                ticks: {\n                  autoSkip: true,\n                  maxTicksLimit: config.maxTicksLimit,\n                  minRotation: 25\n                }\n              }\n            ]\n          },\n          hover: {\n            onHover: (event, chartElement) => {\n              event.target.style.cursor = chartElement[0]\n                ? 'pointer'\n                : 'default';\n            }\n          },\n          legend: {\n            onHover: (event) => {\n              event.target.style.cursor = 'pointer';\n            }\n          },\n          plugins: {\n            crosshair: {\n              sync: {\n                enabled: false // enable trace line syncing with other charts\n              },\n              zoom: {\n                enabled: false\n              }\n            },\n            deferred: {\n              yOffset: '60%',\n              delay: 100\n            }\n          },\n          responsive: true,\n          maintainAspectRatio: false\n        }}\n      />\n    </Grid>\n  );\n};\n\nexport default LineGraph;\n","import React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Grid, Card, makeStyles } from '@material-ui/core';\nimport { numberWithCommas } from '../../../utils/numberWithCommas';\nimport 'chartjs-plugin-deferred';\n\nconst useStyles = (size) =>\n  makeStyles((theme) => {\n    const styles = {\n      root: {\n        height: '430px',\n        [theme.breakpoints.down(theme.breakpoints.width('tablet'))]: {\n          height: '370px'\n        },\n        padding: '0 16px 22px 16px',\n        boxShadow:\n          '0 1px 1px rgba(0,0,0,0.15), 0 2px 2px rgba(0,0,0,0.15), 0 4px 4px rgba(0,0,0,0.15), 0 8px 8px rgba(0,0,0,0.15)'\n      }\n    };\n    if (size < 10) {\n      styles.root[theme.breakpoints.up('md')] = {\n        flexBasis: '40.666667%'\n      };\n      styles.root[theme.breakpoints.only('sm')] = {\n        flexBasis: '49%'\n      };\n    }\n    return styles;\n  });\n\nconst BarGraph = ({\n  country,\n  size,\n  totalData: { confirmed, deaths, recovered }\n}) => {\n  const classes = useStyles(size)();\n  return (\n    <Grid\n      item\n      component={Card}\n      xs={12}\n      sm={6}\n      md={size}\n      className={classes.root}\n    >\n      <Bar\n        data={{\n          labels: ['Infected', 'Recovered', 'Deceased'],\n          datasets: [\n            {\n              label: 'People',\n              backgroundColor: [\n                'rgba(126, 87, 194, .69)',\n                'rgba(23, 247, 23, .52)',\n                'rgba(244, 54, 54, .59)'\n              ],\n              borderWidth: 1.5,\n              hoverBackgroundColor: [\n                'rgba(126, 87, 194, .8)',\n                'rgba(23, 247, 23, .65)',\n                'rgba(244, 54, 54, .69)'\n              ],\n              hoverBorderColor: [\n                'rgba(126, 87, 194, 1)',\n                'rgba(30, 202, 30, .8)',\n                'rgba(244, 54, 54, .8)'\n              ],\n              data: [confirmed, recovered, deaths]\n            }\n          ]\n        }}\n        options={{\n          legend: {\n            display: false\n          },\n          title: {\n            display: true,\n            padding: 5,\n            fontSize: 14,\n            text: country + ' - Total'\n          },\n          scales: {\n            xAxes: [\n              {\n                gridLines: {\n                  // display: false,\n                  borderDash: [8, 3]\n                }\n              }\n            ],\n            yAxes: [\n              {\n                ticks: {\n                  beginAtZero: true,\n                  callback: (value) => numberWithCommas(value)\n                },\n                gridLines: {\n                  borderDash: [8, 3]\n                }\n              }\n            ]\n          },\n          tooltips: {\n            bodyAlign: 'center',\n            titleAlign: 'center',\n            titleFontSize: 16,\n            titleMarginBottom: 8,\n            bodyFontSize: 14,\n            xPadding: 10,\n            yPadding: 10,\n            callbacks: {\n              label: (tooltipItem, data) => {\n                const label = data.datasets[tooltipItem.datasetIndex].label;\n                return `Confirmed ${label}: ${numberWithCommas(\n                  tooltipItem.value\n                )}`;\n              }\n            }\n          },\n          layout: {\n            padding: {\n              top: 30\n            }\n          },\n          plugins: {\n            crosshair: false,\n            deferred: {\n              yOffset: '60%',\n              delay: 300\n            }\n          },\n          responsive: true,\n          maintainAspectRatio: false\n        }}\n      />\n    </Grid>\n  );\n};\n\nexport default BarGraph;\n","import React from 'react';\nimport { generateLGDataset } from '../../utils/generateLGDataset';\nimport LineGraph from './LineGraph/LineGraph';\nimport BarGraph from './BarGraph/BarGraph';\n\nconst DataChart = ({ type, size, data, options, config, toggle }) => {\n  let chartData;\n  let country;\n\n  // check if no longer necessary due to react suspense\n  // if (data.length) {\n  if (type === 'line') {\n    chartData = {\n      confirmed: generateLGDataset(data, 'Infected', '#7e57c2b0', options),\n      recovered: generateLGDataset(data, 'Recovered', '#17f71785', options),\n      deceased: generateLGDataset(\n        data,\n        'Deceased',\n        'rgba(244, 54, 54, .69)',\n        options\n      )\n    };\n  } else {\n    chartData = { ...data[data.length - 1] };\n  }\n  country = data[0].country;\n  // }\n\n  const graph =\n    type === 'line' ? (\n      <LineGraph\n        dailyData={chartData}\n        size={size}\n        country={country}\n        config={config}\n        toggle={toggle}\n        tState={options.filter}\n      />\n    ) : (\n      <BarGraph totalData={chartData} country={country} size={size} />\n    );\n\n  return graph;\n};\n\nexport default DataChart;\n","export const sanitizeCountryCode = (code) => {\n  switch (code) {\n    case 'Burma':\n      return 'MM';\n    case 'Vietnam':\n      return 'VN';\n    case 'Congo (Brazzaville)':\n      return 'CG';\n    case 'Congo (Kinshasa)':\n      return 'CD';\n    case `Cote d'Ivoire`:\n      return 'CI';\n    case 'Diamond Princess':\n      return null;\n    case 'Kosovo':\n      return 'XK';\n    case 'Laos':\n      return 'LA';\n    case 'MS Zaandam':\n      return null;\n    case 'Global':\n      return null;\n    case 'West Bank and Gaza':\n      return 'PS';\n    default:\n      return code;\n  }\n};\n","import React from 'react';\nimport { makeStyles, TextField } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { countryToFlag } from '../../utils/countryToFlag';\nimport { sanitizeCountryCode } from '../../utils/sanitizeCountryCode';\n\nconst useStyles = makeStyles((theme) => ({\n  autoComplete: {\n    minWidth: '20%',\n    width: 300,\n    margin: '5px 0',\n    [theme.breakpoints.down('xs')]: {\n      width: '45%'\n    }\n  },\n  option: {\n    fontSize: 15,\n    '& > span': {\n      marginRight: 10,\n      fontSize: 18\n    }\n  }\n}));\n\nconst CountryPicker = ({ countryListData, handleCountryChange }) => {\n  const classes = useStyles();\n  const countryList = [];\n\n  if (countryListData.Global) {\n    for (let country in countryListData) {\n      countryList.push({\n        country: countryListData[country][0].country,\n        countryCode: sanitizeCountryCode(\n          countryListData[country][0].countryCode\n        ),\n        isSanitized:\n          countryListData[country][0].country ===\n          countryListData[country][0].countryCode\n      });\n    }\n    countryList.sort((a, b) => (a.country > b.country ? 1 : -1));\n  }\n\n  return (\n    <Autocomplete\n      id=\"country-picker\"\n      options={countryList}\n      classes={{ option: classes.option, root: classes.autoComplete }}\n      autoHighlight\n      autoComplete\n      includeInputInList\n      onChange={(e, newValue) => {\n        if (!newValue) return;\n        const countryValue = newValue.isSanitized\n          ? newValue.country\n          : newValue.countryCode;\n        handleCountryChange(countryValue);\n      }}\n      getOptionLabel={(option) => option.country}\n      renderOption={(option) => (\n        <>\n          <span>{countryToFlag(option.countryCode)}</span>{' '}\n          {`${option.countryCode === 'GB' ? 'United Kingdom' : option.country}`}\n        </>\n      )}\n      renderInput={(params) => {\n        const inputProps = params.inputProps;\n        inputProps.autoComplete = 'off';\n        return (\n          <TextField\n            {...params}\n            label=\"Country\"\n            variant=\"outlined\"\n            inputProps={{\n              ...params.inputProps\n            }}\n          />\n        );\n      }}\n    />\n  );\n};\n\nexport default React.memo(CountryPicker);\n","export const countryToFlag = (isoCode) => {\n  if (!isoCode) return;\n  return typeof String.fromCodePoint !== 'undefined'\n    ? isoCode\n        .toUpperCase()\n        .replace(/./g, (char) =>\n          String.fromCodePoint(char.charCodeAt(0) + 127397)\n        )\n    : isoCode;\n};\n","import React from 'react';\nimport { Grid, makeStyles, Typography } from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faReact } from '@fortawesome/free-brands-svg-icons';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: '100px',\n    alignItems: 'center',\n    padding: '0 5%',\n    textAlign: 'center',\n    height: '5rem',\n    backgroundColor: theme.palette.primary.main,\n    [theme.breakpoints.down(theme.breakpoints.values.tablet)]: {\n      flexDirection: 'column',\n      height: '100%',\n      paddingTop: '10px',\n      paddingBottom: '10px'\n    }\n  },\n  textBox1: {\n    paddingTop: '7px'\n  },\n  item2: {\n    flexGrow: 1\n  },\n  textBox2: {\n    paddingBottom: '7px'\n  },\n  text: {\n    color: '#fff',\n    cursor: 'default',\n    opacity: 0.6\n  },\n  glow: {\n    transition: 'opacity 0.8s cubic-bezier(0.165, 0.84, 0.44, 1)',\n    '&:hover': {\n      opacity: 0.9\n    }\n  },\n  anchor: {\n    textDecoration: 'none',\n    opacity: 0.4,\n    position: 'relative',\n    '&::before': {\n      content: '\"\"',\n      position: 'absolute',\n      width: '100%',\n      height: '2px',\n      bottom: 0,\n      left: 0,\n      backgroundColor: '#fff',\n      visibility: 'hidden',\n      transform: 'scaleX(0)',\n      transition: 'all .3s ease-in-out 0s'\n    },\n    '&:hover::before': {\n      visibility: 'visible',\n      transform: 'scaleX(1)'\n    },\n    '&:any-link': {\n      color: '#fff'\n    }\n  }\n}));\n\nconst Footer = () => {\n  const classes = useStyles();\n  return (\n    <Grid container className={classes.root}>\n      <Grid item className={classes.textBox1}>\n        <Typography className={classes.text} display=\"inline\">\n          Data is provided by{' '}\n        </Typography>\n        <a\n          target=\"_blank\"\n          className={[classes.anchor, classes.glow].join(' ')}\n          rel=\"noopener noreferrer\"\n          href=\"https://www.arcgis.com/apps/opsdashboard/index.html#/bda7594740fd40299423467b48e9ecf6\"\n        >\n          <Typography display=\"inline\">\n            Johns Hopkins University CSSE\n          </Typography>\n        </a>{' '}\n        <Typography display=\"inline\" className={classes.text}>\n          via{' '}\n        </Typography>\n        <a\n          target=\"_blank\"\n          className={[classes.anchor, classes.glow].join(' ')}\n          rel=\"noopener noreferrer\"\n          href=\"https://github.com/mathdroid/covid-19-api\"\n        >\n          <Typography display=\"inline\">mathdroid API</Typography>\n        </a>\n      </Grid>\n      <Grid item className={classes.item2}>\n        <Typography className={classes.textBox2} align=\"right\">\n          <span className={[classes.text, classes.glow].join(' ')}>\n            powered by{' '}\n            <FontAwesomeIcon\n              size=\"2x\"\n              transform=\"down-2\"\n              spin\n              style={{ animationDuration: '3s' }}\n              icon={faReact}\n            />\n          </span>\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport {\n  makeStyles,\n  AppBar,\n  Toolbar,\n  Typography,\n  useTheme\n} from '@material-ui/core/';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faVirus } from '@fortawesome/free-solid-svg-icons';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1\n  },\n  toolbar: {\n    padding: '0 5%'\n  },\n  title: {\n    flexGrow: 1,\n    letterSpacing: '.14rem',\n    color: '#f3f1e0'\n  },\n  github: {\n    cursor: 'pointer',\n    opacity: '.6',\n    transition: 'opacity 0.8s cubic-bezier(0.165, 0.84, 0.44, 1)',\n    '&:hover': {\n      opacity: '.9'\n    }\n  },\n  anchor: {\n    textDecoration: 'none',\n    color: 'inherit'\n  }\n});\n\nconst Titlebar = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar className={classes.toolbar}>\n          <Typography variant=\"h6\" align=\"center\" className={classes.title}>\n            C\n            <span style={{ paddingRight: '.14rem' }}>\n              <FontAwesomeIcon\n                spin\n                color={theme.palette.secondary.main}\n                icon={faVirus}\n                style={{ animationDuration: '5s' }}\n              ></FontAwesomeIcon>\n            </span>\n            VID-19 INSIGHTS\n          </Typography>\n          <span className={classes.github}>\n            <a\n              target=\"_blank\"\n              href=\"https://github.com/jawang12/covid-19-insights\"\n              rel=\"noopener noreferrer\"\n              className={classes.anchor}\n            >\n              <FontAwesomeIcon icon={faGithub} size=\"lg\" />\n            </a>\n          </span>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Titlebar;\n","import React from 'react';\nimport { Typography, makeStyles, Tooltip, Fade } from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: '1rem',\n    marginTop: '3rem'\n  },\n  date: {\n    color: theme.palette.secondary.dark,\n    marginTop: 20\n  },\n  title: {\n    display: 'inline-block',\n    textAlign: 'center'\n  },\n  button: {\n    transform: 'translateY(-2rem)',\n    display: 'inline-block',\n    [theme.breakpoints.down(447)]: {\n      display: 'block',\n      transform: 'none',\n      textAlign: 'center',\n      marginTop: 15\n    }\n  },\n  tooltip: {\n    backgroundColor: theme.palette.primary.main,\n    fontSize: theme.typography.pxToRem(13),\n    color: theme.palette.secondary.main,\n    maxWidth: 270\n  },\n  icon: {\n    color: theme.palette.primary.light,\n    transition: 'color 500ms ease-in-out',\n    '&:hover': {\n      color: theme.palette.secondary.main\n    }\n  }\n}));\n\nconst Title = ({ name, dailyReport }) => {\n  const styles = useStyles();\n  let date;\n  if (dailyReport.length) {\n    date = new Date(\n      dailyReport[dailyReport.length - 1].updatedDate.slice(5) +\n        `-${new Date().getFullYear()}`\n    ).toLocaleDateString([], {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  }\n  const tooltipText = `Daily reports reflect the accumulated total for a single day and are updated each morning.`;\n  return (\n    <div className={styles.root}>\n      <Typography color=\"primary\" variant=\"h2\" className={styles.title}>\n        {name}{' '}\n      </Typography>\n      <Tooltip\n        title={tooltipText}\n        classes={{ tooltip: styles.tooltip }}\n        placement=\"top\"\n        arrow\n        TransitionComponent={Fade}\n        TransitionProps={{ timeout: 500 }}\n      >\n        <div className={styles.button}>\n          <FontAwesomeIcon\n            icon={faInfoCircle}\n            className={styles.icon}\n          ></FontAwesomeIcon>\n        </div>\n      </Tooltip>\n      <Typography align=\"center\" className={styles.date}>\n        Latest Report: {date}\n      </Typography>\n    </div>\n  );\n};\n\nexport default Title;\n","import React from 'react';\n\nclass ErrorBoundary extends React.Component {\n  state = { hasError: false, error: null };\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    console.log(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong: {this.state.error.message}</h1>;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React from 'react';\nimport classes from './Spinner.module.css';\n\nconst Spinner = () => (\n  <div className={classes.container}>\n    <div className={classes.cubeGrid}>\n      <div className={[classes.cube, classes.cube1].join(' ')}></div>\n      <div className={[classes.cube, classes.cube2].join(' ')}></div>\n      <div className={[classes.cube, classes.cube3].join(' ')}></div>\n      <div className={[classes.cube, classes.cube4].join(' ')}></div>\n      <div className={[classes.cube, classes.cube5].join(' ')}></div>\n      <div className={[classes.cube, classes.cube6].join(' ')}></div>\n      <div className={[classes.cube, classes.cube7].join(' ')}></div>\n      <div className={[classes.cube, classes.cube8].join(' ')}></div>\n      <div className={[classes.cube, classes.cube9].join(' ')}></div>\n    </div>\n  </div>\n);\n\nexport default Spinner;\n","export const graphConfig = (\n  heightLarge,\n  heightSmall,\n  title,\n  maxTicksLimit,\n  filter\n) => ({\n  heightLarge,\n  heightSmall,\n  title,\n  maxTicksLimit,\n  filter\n});\n","import React, { useState, useCallback } from 'react';\n\nimport { Cards, CountryPicker, Chart, Title } from '../../components';\nimport { makeStyles, Grid } from '@material-ui/core';\nimport { graphConfig } from './utils/graph-config';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    [theme.breakpoints.down('sm')]: {\n      margin: '0 5%'\n    },\n    [theme.breakpoints.up('md')]: {\n      padding: '0 2%'\n    }\n  },\n  container: {\n    marginTop: 25\n  },\n  divider: {\n    flexBasis: '2%',\n    [theme.breakpoints.down('sm')]: {\n      height: '25px'\n    }\n  }\n}));\n\nconst GlobalData = ({ resource }) => {\n  const initialState = resource.reports.read();\n  const [data, setData] = useState(initialState);\n  const styles = useStyles();\n\n  /* without react suspense\n  const [data, setData] = useState({\n    dailyReports: {},\n    currentDailyReport: [],\n    filter: ''\n  });\n    \n  useEffect(() => {\n    (async function () {\n      const reports = await fetchDailyReports();\n      const dailyReports = orderByCountry(reports);\n      console.log(dailyReports, 'daily reports');\n      setData({\n        dailyReports,\n        currentDailyReport: dailyReports.Global,\n        filter: 'total'\n      });\n    })();\n  }, []);\n  */\n\n  const handleCountryChange = useCallback((country) => {\n    setData((previousData) => ({\n      ...previousData,\n      currentDailyReport: previousData.dailyReports[country]\n    }));\n  }, []);\n\n  const handleToggle = (value) =>\n    setData((previousData) => ({\n      ...previousData,\n      filter: value\n    }));\n\n  const dailyReportsOptions = {\n    a: 'confirmed',\n    b: 'recovered',\n    c: 'deaths',\n    filter: data.filter\n  };\n\n  const dailyGrowthOptions = {\n    a: 'confirmedGrowth',\n    b: 'recoveredGrowth',\n    c: 'deathsGrowth',\n    filter: data.filter\n  };\n\n  const dailyGrowthConfig = graphConfig(\n    '570px',\n    '470px',\n    'Growth Per Day',\n    18,\n    true\n  );\n  const dailyReportsConfig = graphConfig('430px', '370px', 'Daily (AGG)', 10);\n\n  return (\n    <div className={styles.root}>\n      <Title name=\"Daily Reports\" dailyReport={data.currentDailyReport} />\n      <Cards quantity={3} data={data.currentDailyReport.slice(-30)} />\n      <CountryPicker\n        countryListData={data.dailyReports}\n        handleCountryChange={handleCountryChange}\n      />\n      <Grid\n        container\n        justify=\"center\"\n        classes={{ container: styles.container }}\n      >\n        <Chart\n          data={data.currentDailyReport}\n          size={10}\n          type=\"line\"\n          options={dailyGrowthOptions}\n          config={dailyGrowthConfig}\n          toggle={handleToggle}\n        />\n      </Grid>\n      <Grid container justify=\"center\" className={styles.container}>\n        <Chart data={data.currentDailyReport} size={5} type=\"bar\" />\n        <div className={styles.divider}></div>\n        <Chart\n          data={data.currentDailyReport}\n          size={5}\n          type=\"line\"\n          options={dailyReportsOptions}\n          config={dailyReportsConfig}\n        />\n      </Grid>\n    </div>\n  );\n};\n\nexport default GlobalData;\n","import axios from 'axios';\nimport { orderByCountry } from '../utils/orderByCountry';\n\nconst wrapPromise = (promise) => {\n  let status = 'pending';\n  let result;\n  let suspender = promise.then(\n    (r) => {\n      status = 'success';\n      result = r;\n    },\n    (e) => {\n      status = 'error';\n      result = e;\n    }\n  );\n\n  return {\n    read() {\n      if (status === 'pending') {\n        throw suspender;\n      } else if (status === 'error') {\n        throw result;\n      } else {\n        return result;\n      }\n    }\n  };\n};\n\nconst dailyReportsPromise = () => {\n  return axios\n    .get(\n      'https://raw.githubusercontent.com/jawang12/covid-data-ext/master/data/data.json'\n    )\n    .then((result) => {\n      const dailyReports = orderByCountry(result.data.dailyReports);\n      return {\n        dailyReports,\n        currentDailyReport: dailyReports.Global,\n        filter: 'total'\n      };\n    });\n};\n\nexport const suspenseFetchDailyReports = () => {\n  return {\n    reports: wrapPromise(dailyReportsPromise())\n  };\n};\n","import React, { Suspense } from 'react';\nimport { GlobalData } from './containers';\nimport { Footer, Titlebar, Spinner } from './components';\nimport { suspenseFetchDailyReports } from './api/suspenseApi';\nimport { ErrorBoundary } from './components/';\nimport classes from './App.module.css';\n\nconst resource = suspenseFetchDailyReports();\n\nconst App = () => {\n  return (\n    <div className={classes.Container}>\n      <header>\n        <Titlebar />\n      </header>\n      <Suspense fallback={<Spinner />}>\n        <main>\n          <ErrorBoundary>\n            <GlobalData resource={resource} />\n          </ErrorBoundary>\n        </main>\n        <footer>\n          <Footer />\n        </footer>\n      </Suspense>\n    </div>\n  );\n};\n\nexport default App;\n","export const orderByCountry = (arr) => {\n  const countriesObj = arr.reduce(\n    (dailyReport, current) => {\n      if (!current.errorStatus) {\n        current.country = 'Global';\n        current.countryCode = 'Global';\n        dailyReport.Global.push(current);\n\n        current.countries.forEach((country) => {\n          country.updatedDate = current.updatedDate;\n          dailyReport[country.countryCode]\n            ? dailyReport[country.countryCode].push(country)\n            : (dailyReport[country.countryCode] = [country]);\n        });\n      }\n      return dailyReport;\n    },\n    { Global: [] }\n  );\n  return sanitizeCountries(countriesObj);\n};\n\nfunction sanitizeCountries(dailyReports) {\n  const sanitizedReports = {};\n\n  for (let country in dailyReports) {\n    if (\n      dailyReports[country].length > 49 ||\n      country === 'KM' ||\n      country === 'LS' ||\n      country === 'TJ'\n    ) {\n      sanitizedReports[country] = dailyReports[country];\n    }\n  }\n  return sanitizedReports;\n}\n","import { createMuiTheme } from '@material-ui/core';\n// import deepPurple from '@material-ui/core/colors/deepPurple';\n\nexport const theme = createMuiTheme({\n  breakpoints: {\n    keys: ['xs', 'sm', 'tablet', 'md', 'laptop', 'lg', 'xl'],\n    values: {\n      xs: 0,\n      sm: 600,\n      tablet: 768,\n      md: 960,\n      laptop: 1024,\n      lg: 1280,\n      xl: 1920\n    }\n  },\n  palette: {\n    primary: {\n      main: '#544E74',\n      light: '#817aa3',\n      dark: '#2a2648'\n    },\n    secondary: {\n      main: '#EAD375',\n      light: '#ffffa5',\n      dark: '#b6a246'\n    }\n  }\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ThemeProvider } from '@material-ui/core/';\nimport { theme } from './mui/theme';\nimport './App.module.css';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}